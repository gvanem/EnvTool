#
# %APPDATA%/envtool.cfg
#
# Names for cache-files
#
cache.filename      = %TEMP%\envtool.cache
cache.filename_prev = %TEMP%\envtool.cache-prev
cache.enable        = 1

#
# If preferring "luaJIT.exe" over "lua.exe", set this to 1.
#
lua.luajit.enable = 0

#
# TODO: to enable searching in "Windows Subsystem for Linux" files, define the
# Windows root for WSL here (only one):
#
# wsl.root = %LOCALAPPDATA%\Packages\CanonicalGroupLimited.Ubuntu22.04LTS_79rhkp1fndgsc\LocalState\rootfs

#
# TODO: to search for 'winget' packages, load this SQlite file:
#
# winget.db  = %LOCALAPPDATA%\Packages\Microsoft.DesktopAppInstaller_8wekyb3d8bbwe\LocalState\Microsoft.Winget.Source_8wekyb3d8bbwe\installed.db
# winget.log = %LOCALAPPDATA%\Packages\Microsoft.DesktopAppInstaller_8wekyb3d8bbwe\LocalState\DiagOutputDir\*.log

#
# Values for 'opt.beep' settings (struct beep_info).
#
beep.enable = 1       # Enable a beep after a long search.
beep.limit  = 1000    # How many msec a search should take before beeping.
beep.freq   = 2000    # The frequency of a beep.
beep.msec   = 20      # And it's duraction in msec.

#
# Settings for remote EveryThing searches (via the ETP protocol):
#
ETP.buffered_io = 1   # Use a read-ahead buffer for 'recv()'
ETP.nonblock_io = 1   # Use 'select()' while waiting for a connect.

#
# Setting for "--grep" option.
#
grep.max_matches = 5  # Max number of matches to print per found file.

#
# Paths or path-specs to ignore if found on %PATH%:
#
[Path]
# ignore = c:\Windows\Sysnative\OpenSSH

#
# You can use wildcards in all 'ignore =' values below.
# Not just for files. I.e. in the below '[PE-resources]' section, you can specify:
#   ignore = File*
#
# Be careful not to "wildcard" too much.
#
# Files to ignore warning about if *not* found in Registry.
# Under "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\App Paths"
#  or   "HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\App Paths"
#
[Registry]
  ignore = c:\windows\System32\what-ever-you-want.exe
  ignore = c:\windows\system32\what-is-missing-but-in-Registry.exe

#
# Compilers to ignore if found on %PATH%:
#
[Compiler]
# ignore =

#
# Ignore these files as duplicates when found in an env-var (like '%PATH%' and '%INCLUDE%')
# during 'envtool --check -v'.
#
# Each 'ignore' keyword can only have one file or file-spec value.
# An 'ignore = foo.*' means 'envtool --check -v' will ignore any matching 'foo.*' file
# in any supported environment variable.
#
[Shadow]
  dtime = 100000  ; seconds of file-time difference to ignore in 'envtool --check -v'

  ignore = %WinDir%\System32\*.exe
  ignore = %WinDir%\SysWOW64\*.exe
  ignore = %WinDir%\Sysnative\*.exe

  ignore = unins00*.exe     # Uninstall programs are probably safe to ignore.
  ignore = link.exe         # Cygwin usually has this program. So does MSVC.

#
# Pythons to ignore if found on %PATH%:
#
[Python]
  ignore = "c:\Program Files (x86)\some-slow-to-start-IronPython\ipy.exe"
  ignore =  c:\some-other-slow-to-start-IronPython-files\ipy64.exe

#
# Things to ignore if found by EveryThing:
#
[EveryThing]
  #
  # 'Windows Defender' scan results:
  #
  ignore = "c:\ProgramData\Microsoft\Windows Defender\Scans\History\Results\*"

  #
  # 'Win-10 Cortana' files:
  #
  ignore = c:\Windows\SystemApps\Microsoft.Windows.Cortana_cw5n1h2txyewy\*

  busy_wait = 2      # If EveryThing is busy indexing itself, wait maximum 2 sec.

#
# Things to ignore if found in PE-resources (with options '--pe -v <filespec>'):
#
[PE-resources]
  ignore = Signature
  ignore = StrucVersion
# ignore = FileVersion
# ignore = ProductVersion
# ignore = FileFlagsMask
# ignore = FileFlags
# ignore = FileType
# ignore = FileSubType
# ignore = FileDate
  ignore = LangID
  ignore = Translation

#
# Login information used by remote EveryThing searches:
#
[Login]
  host1 = username1 / password1 / port 2121
  host2 = username2 / password2 / port 8080
